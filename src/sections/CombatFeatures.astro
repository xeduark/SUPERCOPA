---
import CombatFeatureCountry from "@/components/Combates/CombatFeatureCountry.astro"
import CombatFeatureName from "@/components/Combates/CombatFeatureName.astro"
import Typography from "@/components/Typography.astro"
import { BOXERS } from "@/consts/boxers"

interface Props {
	boxerIds: string[]
}

const relevantBoxerData = Object.entries({
	name: {
		label: "",
	},
	country: {
		label: "País",
		concat: undefined,
	},
	weight: {
		label: "Peso",
		concat: "kg",
	},
	height: {
		label: "Altura",
		concat: "m",
	},
	// guard: {
	// 	label: "Guardia",
	// 	concat: undefined,
	// },
	// reach: {
	// 	label: "Alcance",
	// 	concat: "cm",
	// },
	age: {
		label: "Edad",
		concat: "años",
	},
})

const { boxerIds } = Astro.props

const boxers = boxerIds.map((id) => BOXERS.find((boxer) => boxer.id === id))
const middleIndex = boxers.length / 2
---

<section class="pt-40">
	<Typography as="h2" variant="h2" color="white" class:list={"text-center"}>
		Características
	</Typography>
	<Typography
		as="p"
		variant="body"
		color="neutral"
		class:list={"mx-auto mt-4 text-wrap text-center"}
	>
		Datos relevantes de los boxeadores
	</Typography>
	<table class="mt-10 w-full text-center text-white lg:text-lg">
		<tbody>
			{
				relevantBoxerData.map(([key, { label, concat }]) => {
					return (
						<tr class="mb-10 bg-gradient-to-b from-black/0 via-transparent/40 to-transparent/40 p-4">
							{boxers.map((boxer, index) => {
								if (boxer == null) return null

								return (
									<>
										{key === "country" && <CombatFeatureCountry boxer={boxer} />}
										{key === "name" && <CombatFeatureName boxer={boxer} />}
										{!["country", "name"].includes(key) && (
											<td class="py-3 font-semibold">
												{boxer[key as keyof (typeof boxers)[0]]}
												{concat}
											</td>
										)}
										{index === middleIndex - 1 && <td class="text-primary">{label}</td>}
									</>
								)
							})}
						</tr>
					)
				})
			}
		</tbody>
	</table>
</section>
